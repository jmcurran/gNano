g-0 (no effects)Model:Where:  #for g-0#plots tauplot(density(sim.sample[[1]][,"tau"]), ylab="density", xlab="tau", main="")#plots shapeplot(density(exp(sim.sample[[1]][,"log.Mu"])*exp(sim.sample[[1]][,"log.Mu"])*sim.sample[[1]][,"tau"]), ylab="density", xlab="Shape", main="")observedShape <- density(exp(sim.sample[[1]][,"log.Mu"])*exp(sim.sample[[1]][,"log.Mu"])*sim.sample[[1]][,"tau"])shapeMode <- observedShape$x[which.max(observedShape$y)]#shapeMode = 1.273915#plots rateplot(density(exp(sim.sample[[1]][,"log.Mu"])*sim.sample[[1]][,"tau"]), ylab="density", xlab="Rate", main="")observedRate <- density(exp(sim.sample[[1]][,"log.Mu"])*sim.sample[[1]][,"tau"])rateMode <- observedRate$x[which.max(observedRate$y)]#rateMode = 0.0003441744x <- seq(1, 10000, length = 10000)binSize <- 400#plots the histogram of observed peak heights against fitted gamma curvehist(data.df$obs, xlim=c(0,10000), breaks=seq(1, 40000, binSize), xlab="height(rfu)", ylab="count", main="O(histogram) vs E (modelled gamma)")lines(x, binSize*length(data.df$obs)*dgamma(x, shape = shapeMode, rate = rateMode))#plots observed vs expected peak heightsplot(log10(data.df$obs), log10(colMeans(sim.sample[[1]][,grep("pred", colnames(sim.sample[[1]]))])), xlab="log10(Observed height)", ylab="log10(expected height)", main="", xlim=c(2,5), ylim=c(2,5))abline(coef = c(0,1))
g-1 (+ profile effect, ?)Model:Where:  #for g-0#plots profile effectsboxplot(as.matrix(sim.sample[[1]][,grep("profile", colnames(sim.sample[[1]]))]))abline(h=0)#aph vs profile effectaveLogPeakHeight = data.df %>%      group_by(prof) %>%      summarise(alph = mean(log(obs), na.rm = TRUE)) %>%      pull(alph)#plots locus effect vs aphplot(aveLogPeakHeight, colMeans(sim.sample[[1]][,grep("profile", colnames(sim.sample[[1]]))]), xlab = "log(aph)", ylab = "profile effect (tau_c)")#plots observed vs expected peak heightsplot(log10(data.df$obs), log10(colMeans(sim.sample[[1]][,grep("pred", colnames(sim.sample[[1]]))])), xlab="log10(Observed height)", ylab="log10(expected height)", main="", xlim=c(2,5), ylim=c(2,5))abline(coef = c(0,1))
g-2 (+ locus effect, ?)Model:Where:  #for g-2#plots locus effectsboxplot(as.matrix(sim.sample[[1]][,grep("alpha.locus", colnames(sim.sample[[1]]))]))abline(h=0)#aph_perlocus vs profile effectaveLogPeakHeightPerLocus = data.df %>%      group_by(loc) %>%      summarise(alph = mean(log(obs), na.rm = TRUE)) %>%      pull(alph)#plots locus effect vs aphplot(aveLogPeakHeightPerLocus , colMeans(sim.sample[[1]][,grep("alpha.locus", colnames(sim.sample[[1]]))]), xlab = "log(aph by locus)", ylab = "locus effect (alpha_l)")#plots observed vs expected peak heightsplot(log10(data.df$obs), log10(colMeans(sim.sample[[1]][,grep("pred", colnames(sim.sample[[1]]))])), xlab="log10(Observed height)", ylab="log10(expected height)", main="", xlim=c(2,5), ylim=c(2,5))abline(coef = c(0,1))
g-3 (+ dye effect, ? + dose, X)Model:Where: I is an indicator function #for g-3#plots dye effectsboxplot(as.matrix(sim.sample[[1]][,grep("gamma.dye", colnames(sim.sample[[1]]))]))abline(h=0)#aph_perdye vs profile effectaveLogPeakHeightPerDye = data.df %>%      group_by(dye) %>%      summarise(alph = mean(log(obs), na.rm = TRUE)) %>%      pull(alph)#plots locus effect vs aphplot(aveLogPeakHeightPerDye , colMeans(sim.sample[[1]][,grep("gamma.dye", colnames(sim.sample[[1]]))]), xlab = "log(aph by dye)", ylab = "dye effect (delta_l)")#plots observed vs expected peak heightsplot(log10(data.df$obs), log10(colMeans(sim.sample[[1]][,grep("pred", colnames(sim.sample[[1]]))])), xlab="log10(Observed height)", ylab="log10(expected height)", main="", xlim=c(2,5), ylim=c(2,5))abline(coef = c(0,1))
g-4 (+ variance effect, V)Not sure what the panel plot looks like for this????Model:Where:		where is the average peak height of the profile And remainder of model is the sameplot(density(sim.sample[[1]][,"tau0"]), ylab="density", xlab="tau0", main="")plot(density(sim.sample[[1]][,"tau1"]), ylab="density", xlab="tau1", main="")#plots observed vs expected peak heightsplot(log10(data.df$obs), log10(colMeans(sim.sample[[1]][,grep("pred", colnames(sim.sample[[1]]))])), xlab="log10(Observed height)", ylab="log10(expected height)", main="", xlim=c(2,5), ylim=c(2,5))abline(coef = c(0,1))Page 2 of 2