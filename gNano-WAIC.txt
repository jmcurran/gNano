NumberLoci <- bugsData$numLoci
profileData <- bugsData$P
profileDyes <- bugsData$profileDyes
NumberSamples <- dim(profileData)[[1]]
alleles_at_locus <- bugsData$alleles_at_locus
Number_iterations <- 100

logLik <- array(NA,dim=c(Number_iterations, NumberSamples, NumberLoci, 2))
for (sample in 1:NumberSamples){
  for (locus in 1:NumberLoci){
    if(!is.na(alleles_at_locus[sample,locus])){
      for (allele in 1:alleles_at_locus[sample,locus]){
        logLik[, sample, locus, allele] <- sim.sample.truncated.gamma[[1]][,paste("loglik[", sample, ",", locus, ",", allele, "]",sep="")]
      }
    }
  }
}
#library required for WAIC (also requires matrixstats)
library(loo)
#calculate WAIC for first model (need to sum across alleles at locus)
waic.gamma <- waic(apply(logLik, c(1,2), sum, na.rm=TRUE))

#now do the same for the uniform
logLik.unif <- array(NA,dim=c(Number_iterations, NumberSamples, NumberLoci, 2))
for (sample in 1:NumberSamples){
  for (locus in 1:NumberLoci){
    if(!is.na(alleles_at_locus[sample,locus])){
      for (allele in 1:alleles_at_locus[sample,locus]){
        logLik.unif[, sample, locus, allele] <- sim.sample[[1]][,paste("loglik[", sample, ",", locus, ",", allele, "]",sep="")]
      }
    }
  }
}
#calculates WAIC, again summing log-likelihoods across alleles at a locus
waic.unif <- waic(apply(logLik.unif, c(1,2), sum, na.rm=TRUE))

#comaprison of waic values
print("WAIC for uniform model")
waic.unif 
print("WAIC for gamma model")
waic.gamma 
print("comparison of WAIC values")
compare(waic.unif, waic.gamma)